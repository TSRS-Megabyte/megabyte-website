---
import { formatDate } from "../../libs/dateFormat";
import type { CollectionEntry } from "astro:content";

interface Props {
  entry: CollectionEntry<"accomplishments"> | CollectionEntry<"sessions">;
  tColour: String;
}

const { entry, tColour } = Astro.props;

const { Content } = await entry.render();
---

<div class="card flex h-full w-full flex-col">
  <div
    class="bg-var border-b-2 border-neutral-800 flex flex-shrink px-4 py-3 leading-5 md:px-8"
  >
    <div class="flex flex-[2] items-center">
      <a
        class="mr-3"
        title="Return to Accomplishments"
        href={`/accomplishments#accomplishment-${entry.slug}`}
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          ><path
            fill="currentColor"
            d="m10.875 19.3l-6.6-6.6q-.15-.15-.213-.325T4 12q0-.2.063-.375t.212-.325l6.6-6.6q.275-.275.688-.287t.712.287q.3.275.313.688T12.3 6.1L7.4 11h11.175q.425 0 .713.288t.287.712q0 .425-.287.713t-.713.287H7.4l4.9 4.9q.275.275.288.7t-.288.7q-.275.3-.7.3t-.725-.3Z"
          ></path></svg
        ></a
      >
      <div class="cont">
        <h3 class="mb-2 text-xl font-bold">
          {entry.data.title}
        </h3>
        <h3 class="text-md mb-2 font-bold">
          {formatDate(entry.data.date)}
        </h3>
        <h2>
          {
            "conductedBy" in entry.data
              ? `Conducted by ${entry.data.conductedBy}`
              : ""
          }
        </h2>
      </div>
    </div>
  </div>

  <div class="bg-white grid flex-grow grid-cols-12 gap-4 px-4 py-5 md:px-8">
    <div class="prose max-w-none col-span-12 text-lg md:col-span-8 order-1">
      <Content />
    </div>
    {
      "media" in entry.data && (
        <img
          class="-order-1 md:order-2 col-span-12 md:col-span-4"
          src={entry.data.media[0]}
          alt={entry.data.media[0]}
        />
      )
    }
  </div>
</div>

<style define:vars={{ tColour }}>
  .bg-var {
    background: var(--tColour);
  }

  .card:hover .title {
    background-image: linear-gradient(
      rgba(210, 210, 210, 0.1),
      rgba(210, 210, 210, 20%)
    );
    transition: ease 0.2s;
  }
  .link-button {
    background: #ffffff;
    border: 2px solid black;
    box-shadow: 4px 4px 0px 0px;
  }
  .link-button:hover {
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0px 0px;
  }
</style>
