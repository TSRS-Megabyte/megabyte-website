---
import Button from "./Button.astro";

import { CollectionEntry } from "astro:content";
import { marked } from "marked";
interface Props {
  resource: CollectionEntry<"resources">;
}

const { resource } = Astro.props;
const { Content } = await resource.render();
const likes = "❤️";
---

<div
  id={`resource-${resource.slug}`}
  class="card bg-white flex h-full w-full flex-col"
>
  <div class="grid-cols-12 md:grid">
    <div class="bg-grad col-span-4 flex items-center justify-center">
      {
        resource.data.img ? (
          <img
            class="icon m-auto w-[100px] items-center text-center"
            src={resource.data.img}
          />
        ) : (
          ""
        )
      }
    </div>
    <div class="col-span-8 flex flex-col pb-3">
      <h2 class="w-full border-b-2 py-3 px-4 text-xl font-bold">
        {resource.data.title}
      </h2>
      <div class="px-4 py-3 text-justify">
        <div set:html={await marked.parse(resource.data.description)} />
      </div>
      <!-- <Button link="" text="Read more" color={resource.data.colors[0]} /> -->
      <button
        class="link-button bg w-fit bg-opacity-0 py-[0.2em] text-center font-mono text-lg hover:cursor-pointer self-end mr-4"
      >
        <a href={`resources/${resource.slug}`} class="h-full w-full px-3">
          <span class="w-fit text-base font-light">Read more</span>
        </a>
      </button>
    </div>
  </div>

  <style
    define:vars={{
      colour1: resource.data.colors[0],
      colour2: resource.data.colors[1],
    }}
  >
    .bg-grad {
      background-image: linear-gradient(
        var(--colour1) 0%,
        var(--colour1) 50%,
        var(--colour2) 100%
      );
    }
    .bg {
      background-color: var(--color);
    }
    button {
      border: 2px solid black;
      box-shadow: 4px 4px 0px 0px;
      color: black;
    }
    button:hover {
      transform: translate(2px, 2px);
      box-shadow: 2px 2px 0px 0px;
    }
  </style>
</div>

